{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/HP/Documents/ArgentinaPrograma/ProyectoIntegrador_JuradoRomina/Portfolio_AP/FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ref, uploadBytes, list, getDownloadURL } from '@angular/fire/storage';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/storage\";\nexport class ImageService {\n  constructor(storage) {\n    this.storage = storage;\n  }\n\n  uploadImage($event, name) {\n    const file = $event.target.files[0];\n    const imgRef = ref(this.storage, `imagen/` + name);\n    uploadBytes(imgRef, file).then(response => {\n      this.getImages();\n    }).catch(error => console.log(error));\n  }\n\n  getImages() {\n    var _this = this;\n\n    const imagesRef = ref(this.storage, 'imagen');\n    list(imagesRef).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (response) {\n        for (let item of response.items) {\n          _this.url = yield getDownloadURL(item);\n        }\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()).catch();\n  }\n\n}\n\nImageService.ɵfac = function ImageService_Factory(t) {\n  return new (t || ImageService)(i0.ɵɵinject(i1.Storage));\n};\n\nImageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ImageService,\n  factory: ImageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAAiBA,GAAjB,EAAsBC,WAAtB,EAAmCC,IAAnC,EAAyCC,cAAzC,QAA8D,uBAA9D;;;AAIA,OAAM,MAAOC,YAAP,CAAmB;EAEvBC,YAAoBC,OAApB,EAAoC;IAAhB;EAAqB;;EAElCC,WAAW,CAACC,MAAD,EAAaC,IAAb,EAAyB;IAC1C,MAAMC,IAAI,GAAGF,MAAM,CAACG,MAAP,CAAcC,KAAd,CAAoB,CAApB,CAAb;IACA,MAAMC,MAAM,GAAEb,GAAG,CAAC,KAAKM,OAAN,EAAe,YAAYG,IAA3B,CAAjB;IACAR,WAAW,CAACY,MAAD,EAASH,IAAT,CAAX,CACCI,IADD,CACMC,QAAQ,IAAE;MAAE,KAAKC,SAAL;IAAiB,CADnC,EAECC,KAFD,CAEOC,KAAK,IAAGC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFf;EAIA;;EAEDF,SAAS;IAAA;;IACP,MAAMK,SAAS,GAAGrB,GAAG,CAAC,KAAKM,OAAN,EAAe,QAAf,CAArB;IACAJ,IAAI,CAACmB,SAAD,CAAJ,CACCP,IADD;MAAA,6BACM,WAAMC,QAAN,EAAiB;QACrB,KAAI,IAAIO,IAAR,IAAgBP,QAAQ,CAACQ,KAAzB,EAA+B;UAC7B,KAAI,CAACC,GAAL,SAAiBrB,cAAc,CAACmB,IAAD,CAA/B;QACD;MACF,CALD;;MAAA;QAAA;MAAA;IAAA,KAMCL,KAND;EAOD;;AAtBsB;;;mBAAZb,cAAYqB;AAAA;;;SAAZrB;EAAYsB,SAAZtB,YAAY;EAAAuB,YAFX","names":["ref","uploadBytes","list","getDownloadURL","ImageService","constructor","storage","uploadImage","$event","name","file","target","files","imgRef","then","response","getImages","catch","error","console","log","imagesRef","item","items","url","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP\\Documents\\ArgentinaPrograma\\ProyectoIntegrador_JuradoRomina\\Portfolio_AP\\FrontEnd\\src\\app\\service\\image.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {Storage, ref, uploadBytes, list, getDownloadURL} from '@angular/fire/storage'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n  constructor(private storage: Storage) { }\n\n  public uploadImage($event:any, name: string){\n   const file = $event.target.files[0]\n   const imgRef= ref(this.storage, `imagen/` + name) \n   uploadBytes(imgRef, file)\n   .then(response=> {this.getImages()})\n   .catch(error=> console.log(error)\n   )\n  }\n\n  getImages(){\n    const imagesRef = ref(this.storage, 'imagen')\n    list(imagesRef)\n    .then(async response =>{\n      for(let item of response.items){\n        this.url = await getDownloadURL(item);\n      }\n    })\n    .catch()\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}